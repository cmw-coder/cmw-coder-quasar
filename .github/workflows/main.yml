name: Comware Coder Quasar Main CI

permissions: write-all

on:
  push:
    branches: [ main ]
    tags: [ pre*, v* ]
  pull_request:
    branches: [ main ]

jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      commitHash: ${{ steps.git-info.outputs.commitHash }}
    steps:
      - uses: actions/checkout@v4
      - name: Get git info
        id: git-info
        shell: bash
        run: |
          COMMIT_HASH=$(git rev-parse --short ${{ GITHUB.SHA }})
          echo "commitHash=$COMMIT_HASH" >> $GITHUB_OUTPUT

  build:
    runs-on: windows-latest
    needs: get-info
    env:
      OUTPUT_FOLDER: ./dist/electron/Packaged
      RELEASE_FOLDER: ./release
    strategy:
      matrix:
        config: [ Red, Route, Yellow ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Update runtime config
        shell: python3 {0}
        run: |
          with open("./src-electron/shared/config.ts", "r+", encoding="utf8") as file:
            data = file.read()
            data = data\
              .replace("DEFAULT_CONFIG", "${{ matrix.config }}")
            file.seek(0)
            file.truncate()
            file.write(data)
      - name: Get Comware Coder Proxy
        uses: robinraju/release-downloader@v1.9
        with:
          fileName: '*.dll'
          latest: true
          out-file-path: 'src-electron/assets/proxy'
          preRelease: ${{ startsWith(github.ref, 'refs/tags/pre') }}
          repository: cmw-coder/cmw-coder-proxy
          tarBall: false
          zipBall: false
      - name: List files
        run: |
          ls -la src-electron/assets/proxy
      - name: Setup pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Publish Electron package
        run: pnpm run publish
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cmw-coder-quasar_${{ needs.get-info.outputs.commitHash }}_${{ GITHUB.RUN_NUMBER }}_${{ matrix.config }}_artifacts
          path: |
            ${{ env.OUTPUT_FOLDER }}/*.exe
            ${{ env.OUTPUT_FOLDER }}/*.exe.blockmap
            ${{ env.OUTPUT_FOLDER }}/release.yml
      - name: Upload other files
        uses: actions/upload-artifact@v4
        with:
          name: cmw-coder-quasar_${{ needs.get-info.outputs.commitHash }}_${{ GITHUB.RUN_NUMBER }}_${{ matrix.config }}_other
          path: |
            ${{ env.OUTPUT_FOLDER }}/generic/
            ${{ env.OUTPUT_FOLDER }}/win-unpacked/
            ${{ env.OUTPUT_FOLDER }}/builder-debug.yml
            ${{ env.OUTPUT_FOLDER }}/builder-effective-config.yaml
      - name: Prepare for release
        if: ${{ startsWith(github.ref, 'refs/tags/pre') || startsWith(github.ref, 'refs/tags/v') }}
        shell: bash
        run: |
          mkdir -p ${{ env.RELEASE_FOLDER }}
          cp "${{ env.OUTPUT_FOLDER }}/*.exe" "${{ env.OUTPUT_FOLDER }}/*.exe.blockmap" "${{ env.OUTPUT_FOLDER }}/release.yml" ${{ env.RELEASE_FOLDER }}
      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/pre') || startsWith(github.ref, 'refs/tags/v') }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: |
            ${{ env.RELEASE_FOLDER }}/*.exe
            ${{ env.RELEASE_FOLDER }}/*.exe.blockmap
            ${{ env.RELEASE_FOLDER }}/release.yml
          prerelease: ${{ startsWith(github.ref, 'refs/tags/pre') }}
